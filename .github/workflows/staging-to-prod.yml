name: Merge Staging to Prod
env:
  VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
  VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}

# versioning 할게 없어서 inputs 빈값
on:
  workflow_dispatch:
    inputs:

permissions:
  pull-requests: write
  contents: write

jobs:
  # staging 브랜치를 main 브랜치에 머지하는 PR 생성 후 자동 머지
  versioning:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: staging

      - name: Get package version
        id: package-version-old
        uses: martinbeentjes/npm-get-version-action@v1.3.1


      - name: Remove prerelease version and set BASE_VERSION
        id: set-base-version
        run: |
          BASE_VERSION=$(echo ${{ steps.package-version-old.outputs.current-version }} | sed -E 's/-[a-zA-Z0-9\.]+$//')
          echo "BASE_VERSION=$BASE_VERSION" >> $GITHUB_ENV
          echo $BASE_VERSION

      - name: Commit changes
        run: |
            git config user.name "github-actions[bot]"
            git config user.email "github-actions[bot]@users.noreply.github.com"
            npm version $BASE_VERSION --no-git-tag-version --workspace-update
            git add .
            git commit -m "Version v${{ steps.package-version-old.outputs.current-version }} to v${{ env.BASE_VERSION }}"
            git push --set-upstream origin staging


  create-PR:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Create pull request
        id: cpr
        uses: peter-evans/create-pull-request@v7
        with:
          token: ${{ secrets.GH_TOKEN }}
          commit-message: Update report
          committer: github-actions[bot] <41898282+github-actions[bot]@users.noreply.github.com>
          author: ${{ github.actor }} <${{ github.actor_id }}+${{ github.actor }}@users.noreply.github.com>
          signoff: false
          delete-branch: false
          title: '[Example] Update report'
          body: |
            Update report
            - Updated with *today's* date
            - Auto-generated by [create-pull-request][1]
            
            [1]: https://github.com/peter-evans/create-pull-request
          labels: |
            main
          assignees: ${{ github.actor }}
          team-reviewers: |
            developers
          draft: false
          branch: staging

  automerge:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - uses: peter-evans/enable-pull-request-automerge@v3
        with:
          pull-request-number: ${{ steps.cpr.outputs.pull-request-number }}
#  create-merge-pr:
#    if: ${{ success() }}
#    needs: versioning
#    runs-on: ubuntu-latest
#    steps:
#      - name: Checkout
#        uses: actions/checkout@v4
#        with:
#          ref: staging
#
#      - name: Create Pull Request
#        run: gh pr create --title "Merge Staging to Prod" --body "staging to prod" --assignee @me --base main
#        env:
#          GH_TOKEN: ${{ secrets.GH_TOKEN }}
#
#      - name: Merge Pull Request
#        run: |
#          PR_NUMBER=$(gh pr list --state open --json number --jq ".[0].number")
#          gh pr merge $PR_NUMBER --merge
#        env:
#          GH_TOKEN: ${{ secrets.GH_TOKEN }}


  deploy-prod-server:
    if: ${{ needs.create-merge-pr.result == 'success' }}
    runs-on: ubuntu-latest
    steps:
        - uses: actions/checkout@v2
        - name: Install Vercel CLI
          run: npm install --global vercel@latest
        - name: Pull Vercel Environment Information
          run: vercel pull --yes --environment=production --token=${{ secrets.VERCEL_TOKEN }}
        - name: Build Project Artifacts
          run: vercel build --prod --token=${{ secrets.VERCEL_TOKEN }}
        - name: Deploy Project Artifacts to Vercel
          run: vercel deploy --prebuilt --prod --token=${{ secrets.VERCEL_TOKEN }}



