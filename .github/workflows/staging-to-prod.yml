name: Merge Staging to Prod
env:
  VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
  VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}

# versioning 할게 없어서 inputs 빈값
on:
  workflow_dispatch:
    inputs:

permissions:
  pull-requests: write
  contents: write

jobs:
  # staging 브랜치를 main 브랜치에 머지하는 PR 생성 후 자동 머지
  versioning:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: staging

      - name: Get package version
        id: package-version-old
        uses: martinbeentjes/npm-get-version-action@v1.3.1


      - name: Remove prerelease version and set BASE_VERSION
        id: set-base-version
        run: |
          BASE_VERSION=$(echo ${{ steps.package-version-old.outputs.current-version }} | sed -E 's/-[a-zA-Z0-9\.]+$//')
          echo "BASE_VERSION=$BASE_VERSION" >> $GITHUB_ENV
          echo $BASE_VERSION

      - name: Commit changes
        run: |
            git config user.name "github-actions[bot]"
            git config user.email "github-actions[bot]@users.noreply.github.com"
            npm version $BASE_VERSION --no-git-tag-version --workspace-update
            git add .
            git commit -m "Version v${{ steps.package-version-old.outputs.current-version }} to v${{ env.BASE_VERSION }}"
            git push --set-upstream origin staging

  create-merge-pr:
    if: ${{ success() }}
    needs: versioning
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: staging

      - name: Create Pull Request
        run:  |
          PR_OUTPUT=$(gh pr create --title "Merge Staging to Prod" --body "staging to prod" --assignee @me --base main)
          echo "PR_OUTPUT=$PR_OUTPUT" >> $GITHUB_ENV
          PR_NUMBER=$(echo "$PR_OUTPUT" | grep -oP '(?<=/pull/)\d+')
          echo "PR_NUMBER=$PR_NUMBER" >> $GITHUB_ENV

        env:
          GH_TOKE: ${{ secrets.GH_TOKEN }}

      - name: Merge Pull Request
        run: |
          gh pr merge $PR_NUMBER --merge
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}



