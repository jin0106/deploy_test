name: Merge Staging to Staging
env:
  VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
  VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}

# 버전 minor와 major 중 어떤것을 올릴것인지  선택 가능
on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Version type'
        required: true
        default: 'minor'
        type: choice
        options:
          - 'minor'
          - 'major'
          - 'patch'
          - 'rc'
jobs:

  # staging 브랜치 브랜치의 버젼 변경
  staging-versioning:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: staging

      - name: Get package version
        id: package-version-old
        uses: martinbeentjes/npm-get-version-action@v1.3.1

      - name: version major
        if: ${{ inputs.version == 'major'}}
        run: |
          npm version premajor --no-git-tag-version --no-workspaces-update --preid=rc

      - name: version minor
        if: ${{ inputs.version == 'minor'}}
        run: |
          npm version preminor --no-git-tag-version --no-workspaces-update --preid=rc

      - name: version patch
        if: ${{ inputs.version == 'patch'}}
        run: |
          npm version prepatch --no-git-tag-version --no-workspaces-update --preid=rc

      - name: version rc
        if: ${{ inputs.version == 'rc'}}
        run: |
          npm version prerelease --no-git-tag-version --no-workspaces-update

     

  push-staging:
    runs-on: ubuntu-latest
    steps:
      - name: Get package version
        id: package-version-new
        uses: martinbeentjes/npm-get-version-action@v1.3.1

      - name: checkout staging and push
        run : |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add .
          git commit -m "Version v${{ steps.package-version-old.outputs.current-version }} to v${{ steps.package-version-new.outputs.current-version }}"
          git push --set-upstream origin staging

  deploy-prod-server:
    if: ${{ success() }}
    needs: push-staging
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Install Vercel CLI
        run: npm install --global vercel@latest
      - name: Pull Vercel Environment Information
        run: vercel pull --yes --environment=production --token=${{ secrets.VERCEL_TOKEN }}
      - name: Build Project Artifacts
        run: vercel build --prod --token=${{ secrets.VERCEL_TOKEN }}
      - name: Deploy Project Artifacts to Vercel
        run: vercel deploy --prebuilt --prod --token=${{ secrets.VERCEL_TOKEN }}
